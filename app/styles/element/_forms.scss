@mixin input-variant($color) {

	.form-control {

		&.edited:not([readonly]),
		&.form-control-static,
		&:focus:not([readonly]),
		&.focus:not([readonly]) {
			~ label,
			~ .form-control-focus {
				&:after {
					box-shadow: 0 1px 0 0 $color;
					border-bottom: 1px solid $color;
				}
			}

			~ label {
				color: $color;
			}

			~ i {
				color: $color;
			}

			~ .help-text {
				color: $color;
			}
		}
	}

	.input-group-addon {
		color: $color;
	}

	.form-horizontal & > label {
		color: $color;
  	}
}

/*from basement*/
input[type="number"]{
	padding-right: 0;
}
form:not(output):-moz-ui-invalid,
form input:invalid {
    box-shadow: none;
}
form label{
  font-weight: normal;
  font-family: $font-primary;
}

/*bootstrap from */
.form-bordered .form-group {
  border-bottom: 1px solid $lightGrey;
  margin-bottom: 15px;
  padding-bottom: 15px;

  &.last, &:last-child{
    border-bottom: medium none;
    margin-bottom: 0px;
    padding-bottom: 0px;
  }
}

.form-control {
  border-radius: 0;
}
.form-group-vertical .form-control {
  border-radius: 0;
  margin-top: -1px;
  margin-bottom: 0px !important;
  z-index: 1;
}
.form-group-vertical .input-group .form-control {
  margin-top: 0;
}
.input-group .input-group-addon {
  background: #FFF none repeat scroll 0 0;
}
.form-group-vertical .input-group .input-group-addon{
  border-radius: 0;
}



//am form-select


.form-group.am-forms {
	 position: relative;
  	margin: 0 0 35px 0;
  	padding-top: 20px;


  	&:last-child {
  		margin-bottom: 0;
  	}

	.form-control {
		background: none;
		border: 0;
		border-bottom: 1px solid $lightGrey;
		@include placeholder($input-placeholder);
		@include border-radius(0);
		color: $defaultColor;
		box-shadow: none;

		&.form-control-static {
			border-bottom: 0;
		}

		padding-left: 0;
		padding-right: 0;
		margin-bottom:0;
		font-size: 16px;

		&.input-sm {
			font-size: 14px;
			padding: 6px 0;
		}

		&.input-lg {
			font-size: 20px;
			padding: 14px 0;
		}

		~ label,
		~ .form-control-focus {

			position: absolute;
			@include opacity(1);
			bottom: 0;
			width: 100%;
			left: 0;
			pointer-events: none;



			&:after {
				content: '';
			  	position: absolute;
			  	z-index: 5;
			  	bottom: 0;
			  	left: 0;
			  	height: 2px;
			  	width: 100%;
			  	visibility: hidden;
			  	transition: 0.8s ease all;
					@include opacity(0);
			}
		}

		~ label {
			top: 0;
			margin-bottom: 0;
			font-size: 16px;
			color: $defaultColor;

		}

   	&.edited:not([readonly]),
		&:focus:not([readonly]),
		&.focus:not([readonly]) {
			~ label,
			~ .form-control-focus {
				color: $input-label-color;

				&:after {
					visibility: visible;
					left: 0;
					width: 100%;
			  	box-shadow: 0 1px 0 0 $baseColor;
					border-bottom: 1px solid $baseColor;
					@include opacity(1);
				}
			}

			~ label {
				@include opacity(1);
			}

			~ .help-text {
				@include opacity(1);
			}
		}

	 	&[readonly],
		&[disabled],
	    fieldset[disabled] & {
	    	background: none;
	        cursor: not-allowed;
  			border-bottom: 1px dashed $lightGrey;
	    }
	}

	&.animate-label {
		.form-control {

		   	~ label {
		   	font-size: 16px;
				top: 25px;
				transition: 0.2s ease all;
				color: $input-placeholder;
		   	}

			&[readonly],
		   	&.edited,
		   	&.form-control-static,
		   	&:focus:not([readonly]),
			&.focus:not([readonly]) {
				~ label {
					top: 0;
					font-size: 16px;
				}
			}

			&.input-sm {
				~ label {
			   		font-size: 14px;
					top: 24px;
			   	}

				&[readonly],
				&.form-control-static,
			   	&.edited,
			   	&:focus:not([readonly]),
				&.focus:not([readonly]) {
					~ label {
						top: 0;
						font-size: 14px;
					}
				}
			}

			&.input-lg {
				~ label {
			   		font-size: 20px;
					top: 30px;
			   	}

				&[readonly],
			   	&.edited,
			   	&.form-control-static,
			   	&:focus:not([readonly]),
				&.focus:not([readonly]) {
					~ label {
						top: 0;
						font-size: 16px;
					}
				}
			}
		}
	}

	// help text style
	.help-text {
			position: absolute;
			display: block;
	  	@include opacity(0);
	  	font-size: 13px;
	}

	//input with input-icon

	&.input-icon{
		position: relative;

		i{
			position: absolute;
			bottom: 0;
			left:0;
			margin: 5px 10px 10px;
			width: 16px;
			text-align: center;
		}

		.form-control{
			padding-left: 30px;
		}

		&.right{
			i{
				right: 0;
				left:auto;
			}

			.form-control{
				padding-left: 0px;
				padding-right: 30px;
			}

		}
	}

	&.has-success {
			@include input-variant($input-success);
	}

	&.has-warning {

			@include input-variant($input-warning);
	}

	&.has-error {
			@include input-variant($input-danger);

	}

	&.has-info {

			@include input-variant($input-info);

	}

	// Input groups

	&.input-group {
		padding-top: 20px;

		.input-group-addon {
			@include border-radius(0);
			background: none;
			border: 0;
			border-bottom: 1px solid $lightGrey;
		}

		& + .input-group-control {
  			padding-top: 0;
  		}

		.input-group-control {
			padding-top: 20px;
			position: relative;
			display: table-cell;
  			vertical-align: bottom;
		}

		.input-group-btn.btn-left .btn {
			margin-right: 10px;
			margin-bottom: -20px;
		}

		.input-group-btn.btn-right .btn {
			margin-left: 10px;
			margin-bottom: -20px;
		}

		&.input-group-sm {
			.input-group-btn .btn {
				margin-bottom: -20px;
			}
		}

		&.input-group-lg {
			.input-group-btn .btn {
				margin-bottom: -20px;
			}
		}
	}


} // am-forms


// Inline forms

.form-inline {
	.am-forms {
		margin: 0;
		padding-top: 0;
		margin-right: 20px;

		> .input-icon {
			padding: 0;
		}
	}
}

// Horizontal forms
.form-horizontal {

	.form-group.am-forms {
		padding-top: 10px;
	  margin: 0 -15px 20px -15px;
		&.input-icon {
			.form-control {
				padding-left: 33px;
			}

			 i {
				top: 0;
			}

			&.right {
				.form-control {
					padding-left: 0;
					padding-right: 33px;
				}
			}

			 .form-control-focus {
				left: 0 !important;
				right: 0 !important;
			}
		}
	}

	.form-group.am-forms.input-group {
	  		padding-top: 0;
				display: block;

	  	 	& > .input-group-btn {
	  			.btn {
	  				margin-bottom: 0 !important;
	  			}
	  		}

	  		 .input-group-control {
				padding-top: 0;

	  			> .form-control-focus {
	  				left: 0 !important;
					right: 0 !important;
	  			}
	  		}

			 .form-control-focus {
				left: 0 !important;
				right: 0 !important;
			}
		}
	}

	// checkbox, redio

	.am-checkbox{
		position: relative;
		vertical-align: middle;
		margin-right: 10px;
		input{
			@include opacity(0);
			position: absolute;
			left: 0;
			right: 0;
		}

		.checked{
			@include transition(all 0.3s ease-in-out 0s);
			@include border-radius(3px);
			border: 2px solid #ddd;
	    display: inline-block;
	    height: 20px;
	    margin-right: 5px;
	    outline: 0 none;
	    position: relative;
	    top: 5px;
	    width: 20px;

			&::before{
				@include transition(transform 0.33s cubic-bezier(0.55, 0, 0.1, 1));
				@include rotate(0deg);
				box-sizing: content-box;
		    content: "";
		    display: block;
		    height: 0;
		    margin: 0;
		    opacity: 0;
		    padding: 0;
		    width: 0;
			}
		}
		input:checked + .checked::before{
			@include rotate(-45deg);
			-moz-border-bottom-colors: none;
	    -moz-border-left-colors: none;
	    -moz-border-right-colors: none;
	    -moz-border-top-colors: none;
	    border-color: #ddd;
	    border-image: none;
	    border-style: solid;
	    border-width: 0 0 3px 3px;
	    height: 3px;
	    left: 3px;
	    opacity: 1;
	    position: absolute;
	    top: 4px;
	    width: 8px;
		}

		&.colored .checked{
			border-color: $baseColor;
		}
		&.colored input:checked + .checked{
			background: $baseColor;
		}

		&.colored input:checked + .checked::before{
			border-color: $light;
		}

		&.tick input:checked + .checked{
			border-color: transparent;
		}

		&.tick input:checked + .checked::before{
			height: 7px;
			top:0;
			width: 18px;
		}

		&.colored.tick input:checked + .checked{
			background: transparent;
		}

		&.colored.tick input:checked + .checked::before{
			border-color: $baseColor;
		}
	}


	.am-radio{
		position: relative;
		vertical-align: middle;
		margin-right: 10px;

		input{
			@include opacity(0);
			position: absolute;
			left: 0;
			right: 0;
		}

		.checked{
			@include transition(all 0.3s ease-in-out 0s);
			@include border-radius(50%);
			border: 2px solid #ddd;
			display: inline-block;
			height: 20px;
			margin-right: 5px;
			outline: 0 none;
			position: relative;
			top: 5px;
			width: 20px;

			&::before{
				box-sizing: content-box;
				content: "";
				display: block;
				height: 0;
				margin: 0;
				opacity: 0;
				padding: 0;
				width: 0;
			}
		}
		input:checked + .checked::before{
			@include border-radius(50%);
			background: #DDD;
			height: 10px;
			left: 3px;
			opacity: 1;
			position: absolute;
			top: 3px;
			width: 10px;
		}

		&.colored .checked{
			border-color: $baseColor;
		}

		&.colored input:checked + .checked::before{
				background: $baseColor;
		}
	}
